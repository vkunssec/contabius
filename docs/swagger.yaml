basePath: /
definitions:
  AccountRequest:
    properties:
      account:
        description: Nome da conta
        example: Conta Corrente
        type: string
      color:
        description: Cor da conta
        example: '#000000'
        type: string
    required:
    - account
    - color
    type: object
  Accounts:
    properties:
      account:
        description: Nome da conta
        example: Conta Corrente
        type: string
      color:
        description: Cor da conta
        example: '#000000'
        type: string
      created_at:
        description: Data de criação
        example: "2025-01-01T00:00:00Z"
        type: string
      id:
        description: ID da conta
        example: 678079f6f5080a39a8eedc1e
        type: string
      updated_at:
        description: Data de atualização
        example: "2025-01-01T00:00:00Z"
        type: string
    type: object
  BadRequest:
    description: Estrutura padrão de resposta de erro de requisição
    properties:
      message:
        description: Mensagem descritiva
        example: Erro ao processar a requisição
        type: string
      success:
        description: Indica se a operação foi bem sucedida
        example: false
        type: boolean
    type: object
  Categories:
    properties:
      category:
        description: Nome da categoria
        example: Alimentação
        type: string
      created_at:
        description: Data de criação
        example: "2025-01-01T00:00:00Z"
        type: string
      id:
        description: ID da categoria
        example: 678079f6f5080a39a8eedc1e
        type: string
      parent:
        description: ID do pai da categoria
        example: 678079f6f5080a39a8eedc1e
        type: string
      updated_at:
        description: Data de atualização
        example: "2025-01-01T00:00:00Z"
        type: string
    type: object
  CategoryRequest:
    properties:
      category:
        description: Nome da categoria
        example: Alimentação
        type: string
      parent:
        description: ID do pai da categoria
        example: 678079f6f5080a39a8eedc1e
        type: string
    required:
    - category
    type: object
  CostRequest:
    properties:
      amount:
        allOf:
        - $ref: '#/definitions/Money'
        description: Valor do custo
      category:
        allOf:
        - $ref: '#/definitions/PartialCategoryRequest'
        description: ID da categoria
      cost:
        description: Descrição do custo
        example: aluguel
        type: string
      installments:
        description: Número de parcelas
        example: 12
        type: integer
      methods:
        allOf:
        - $ref: '#/definitions/Methods'
        description: Método de pagamento
    required:
    - amount
    - category
    - cost
    type: object
  Costs:
    properties:
      amount:
        allOf:
        - $ref: '#/definitions/Money'
        description: Valor do custo
      category:
        allOf:
        - $ref: '#/definitions/Categories'
        description: Categoria do custo
      cost:
        description: Descrição do custo
        example: aluguel
        type: string
      created_at:
        description: Data de criação do custo
        example: "2025-01-01T00:00:00Z"
        type: string
      id:
        description: ID do custo
        example: 678079f6f5080a39a8eedc1e
        type: string
      installments:
        description: Número de parcelas
        example: 12
        type: integer
      methods:
        allOf:
        - $ref: '#/definitions/Methods'
        description: Método de pagamento
      updated_at:
        description: Data de atualização do custo
        example: "2025-01-01T00:00:00Z"
        type: string
    type: object
  Currency:
    enum:
    - BRL
    - USD
    - EUR
    type: string
    x-enum-varnames:
    - CurrencyBRL
    - CurrencyUSD
    - CurrencyEUR
  GetCategoriesResponse:
    properties:
      categories:
        description: Dados das categorias
        items:
          $ref: '#/definitions/Categories'
        type: array
      message:
        description: Mensagem de sucesso ou erro
        example: Categorias retornadas com sucesso
        type: string
      success:
        description: Sucesso da operação
        example: true
        type: boolean
    type: object
  GetInvestmentsResponse:
    properties:
      message:
        description: Mensagem de sucesso ou erro
        example: Investimentos retornados com sucesso
        type: string
      success:
        description: Sucesso da operação
        example: true
        type: boolean
      types:
        description: Dados dos investimentos
        items:
          $ref: '#/definitions/InvestmentType'
        type: array
    type: object
  GetMethodsResponse:
    properties:
      message:
        description: Mensagem de sucesso ou erro
        example: Métodos retornados com sucesso
        type: string
      methods:
        description: Dados dos métodos
        items:
          $ref: '#/definitions/Methods'
        type: array
      success:
        description: Sucesso da operação
        example: true
        type: boolean
    type: object
  InternalServerError:
    description: Estrutura padrão de resposta de erro de servidor interno
    properties:
      message:
        description: Mensagem descritiva
        example: Internal Server Error
        type: string
      success:
        description: Indica se a operação foi bem sucedida
        example: false
        type: boolean
    type: object
  InvestmentId:
    enum:
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    type: integer
    x-enum-varnames:
    - InvestmentTypeCDIId
    - InvestmentTypeCDBId
    - InvestmentTypeLCAId
    - InvestmentTypeLCIId
    - InvestmentTypePoupancaId
    - InvestmentTypeTesouroDiretoId
    - InvestmentTypeFundosInvestimentoId
    - InvestmentTypeAcoesId
    - InvestmentTypeFIIsId
    - InvestmentTypeCRIId
    - InvestmentTypeCRAId
    - InvestmentTypeDebenturesId
    - InvestmentTypeBDRId
    - InvestmentTypeCOEId
    - InvestmentTypeOtherId
  InvestmentLiteral:
    enum:
    - cdi
    - cdb
    - lca
    - lci
    - poupanca
    - tesouro_direto
    - fundos_investimento
    - acoes
    - fiis
    - cri
    - cra
    - debentures
    - bdr
    - coe
    - other
    type: string
    x-enum-comments:
      InvestmentTypeAcoes: Ações
      InvestmentTypeBDR: Depositário Brasileiro de Recebíveis
      InvestmentTypeCDB: Certificado de Depósito Bancário
      InvestmentTypeCDI: Certificado de Depósito Interbancário
      InvestmentTypeCOE: Certificado de Operações Estruturadas
      InvestmentTypeCRA: Certificado de Recebíveis do Agronegócio
      InvestmentTypeCRI: Certificado de Recebíveis Imobiliários
      InvestmentTypeDebentures: Debêntures
      InvestmentTypeFIIs: Fundos de Investimento Imobiliário
      InvestmentTypeFundosInvestimento: Fundos de Investimento
      InvestmentTypeLCA: Letra de Crédito do Agronegócio
      InvestmentTypeLCI: Letra de Crédito Imobiliário
      InvestmentTypeOther: Outros
      InvestmentTypePoupanca: Poupança
      InvestmentTypeTesouroDireto: Tesouro Direto
    x-enum-varnames:
    - InvestmentTypeCDI
    - InvestmentTypeCDB
    - InvestmentTypeLCA
    - InvestmentTypeLCI
    - InvestmentTypePoupanca
    - InvestmentTypeTesouroDireto
    - InvestmentTypeFundosInvestimento
    - InvestmentTypeAcoes
    - InvestmentTypeFIIs
    - InvestmentTypeCRI
    - InvestmentTypeCRA
    - InvestmentTypeDebentures
    - InvestmentTypeBDR
    - InvestmentTypeCOE
    - InvestmentTypeOther
  InvestmentRequest:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/PartialAccountRequest'
        description: Conta do usuário
      amount:
        allOf:
        - $ref: '#/definitions/Money'
        description: Valor do investimento
      description:
        description: Descrição do investimento
        example: Investimento em CDB
        type: string
      investment_type:
        allOf:
        - $ref: '#/definitions/InvestmentType'
        description: Tipo de investimento
      recurrence:
        allOf:
        - $ref: '#/definitions/Recurrence'
        description: Recurrence do investimento
      recurrence_day:
        description: Dia da recorrência
        type: integer
    required:
    - account
    - amount
    - investment_type
    type: object
  InvestmentType:
    properties:
      id:
        allOf:
        - $ref: '#/definitions/InvestmentId'
        description: ID do investimento
        example: 1
      investment:
        allOf:
        - $ref: '#/definitions/InvestmentLiteral'
        description: Tipo de investimento
        example: cdi
    type: object
  Investments:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/Accounts'
        description: Conta do usuário
      amount:
        allOf:
        - $ref: '#/definitions/Money'
        description: Valor do investimento
      created_at:
        description: Data de criação do investimento
        example: "2025-01-01T00:00:00Z"
        type: string
      description:
        description: Descrição do investimento
        example: Investimento em CDB
        type: string
      id:
        description: ID do investimento
        example: 678079f6f5080a39a8eedc1e
        type: string
      investment_type:
        allOf:
        - $ref: '#/definitions/InvestmentType'
        description: Tipo de investimento
      recurrence:
        allOf:
        - $ref: '#/definitions/Recurrence'
        description: Recurrence do investimento
        example: monthly
      recurrence_day:
        description: Dia da recorrência
        example: 1
        type: integer
      updated_at:
        description: Data de atualização do investimento
        example: "2025-01-01T00:00:00Z"
        type: string
    type: object
  Method:
    enum:
    - credit
    - debit
    - pix
    - boleto
    - cash
    type: string
    x-enum-varnames:
    - MethodCredit
    - MethodDebit
    - MethodPix
    - MethodBoleto
    - MethodCash
  MethodId:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - MethodCreditId
    - MethodDebitId
    - MethodPixId
    - MethodBoletoId
    - MethodCashId
  Methods:
    properties:
      id:
        allOf:
        - $ref: '#/definitions/MethodId'
        description: ID do método de pagamento
        example: 1
      method:
        allOf:
        - $ref: '#/definitions/Method'
        description: Método de pagamento
        example: credit
    type: object
  Money:
    properties:
      currency:
        allOf:
        - $ref: '#/definitions/Currency'
        description: default code BRL
        example: BRL
      quantity:
        example: 1000
        type: integer
    type: object
  PartialAccountRequest:
    properties:
      account:
        description: Nome da conta
        example: Conta Corrente
        type: string
      color:
        description: Cor da conta
        example: '#000000'
        type: string
      id:
        description: ID da conta
        example: 678079f6f5080a39a8eedc1e
        type: string
    required:
    - account
    - color
    - id
    type: object
  PartialCategoryRequest:
    properties:
      category:
        description: Nome da categoria
        example: Alimentação
        type: string
      id:
        description: ID da categoria
        example: 678079f6f5080a39a8eedc1e
        type: string
    required:
    - category
    - id
    type: object
  Recurrence:
    enum:
    - monthly
    - yearly
    - sporadic
    type: string
    x-enum-comments:
      RecurrenceMonthly: Mensal
      RecurrenceSporadic: Esporádico
      RecurrenceYearly: Anual
    x-enum-varnames:
    - RecurrenceMonthly
    - RecurrenceYearly
    - RecurrenceSporadic
  Response:
    description: Estrutura padrão de resposta
    properties:
      data:
        description: Dados da resposta
      message:
        description: Mensagem descritiva
        example: Operação realizada com sucesso
        type: string
      success:
        description: Indica se a operação foi bem sucedida
        example: true
        type: boolean
    type: object
  RevenueRequest:
    properties:
      amount:
        allOf:
        - $ref: '#/definitions/Money'
        description: Valor da receita
      method:
        allOf:
        - $ref: '#/definitions/Methods'
        description: Método de pagamento
      revenue:
        description: Receita
        example: salário
        type: string
    required:
    - amount
    - revenue
    type: object
  Revenues:
    properties:
      amount:
        allOf:
        - $ref: '#/definitions/Money'
        description: Valor da receita
      created_at:
        description: Data de criação da receita
        example: "2025-01-01T00:00:00Z"
        type: string
      id:
        description: ID da receita
        example: 678079f6f5080a39a8eedc1e
        type: string
      method:
        allOf:
        - $ref: '#/definitions/Methods'
        description: Método de pagamento
      revenue:
        description: Receita
        example: salário
        type: string
      updated_at:
        description: Data de atualização da receita
        example: "2025-01-01T00:00:00Z"
        type: string
    type: object
  UserLogin:
    properties:
      email:
        description: Email do usuário
        example: user@example.com
        type: string
      password:
        description: Senha do usuário
        example: password123
        type: string
    required:
    - email
    - password
    type: object
  UserRequest:
    properties:
      email:
        description: Email do usuário
        example: user@example.com
        type: string
      name:
        description: Nome do usuário
        example: John Doe
        type: string
      password:
        description: Senha do usuário
        example: password123
        type: string
      type:
        allOf:
        - $ref: '#/definitions/UserType'
        description: Tipo de usuário
        example: admin
    required:
    - email
    - name
    - password
    - type
    type: object
  UserType:
    enum:
    - admin
    - user
    - guest
    type: string
    x-enum-varnames:
    - UserTypeAdmin
    - UserTypeUser
    - UserTypeGuest
  UserUpdatePassword:
    properties:
      password:
        description: Senha do usuário
        example: password123
        type: string
      password_confirm:
        description: Senha do usuário
        example: password123
        type: string
    required:
    - password
    - password_confirm
    type: object
  UserUpdateRequest:
    properties:
      email:
        description: Email do usuário
        example: user@example.com
        type: string
      name:
        description: Nome do usuário
        example: John Doe
        type: string
      type:
        allOf:
        - $ref: '#/definitions/UserType'
        description: Tipo de usuário
        example: admin
    required:
    - email
    - name
    type: object
host: ${HOST}
info:
  contact:
    name: API Support
    url: https://vkunssec.vercel.app
  description: API para gerenciamento de gastos e informações financeiras
  license:
    name: MIT
    url: https://github.com/vkunssec/contabius/blob/main/LICENSE
  termsOfService: http://swagger.io/terms/
  title: Contabius API
  version: "1.0"
paths:
  /account:
    get:
      consumes:
      - application/json
      description: Rota para retornar as contas bancárias
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - collectionFormat: csv
        description: Ids das contas bancárias a serem retornadas
        example:
        - 678079f6f5080a39a8eedc1e
        in: query
        items:
          type: string
        name: ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Accounts'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para retornar as contas bancárias
      tags:
      - Account
    post:
      consumes:
      - application/json
      description: Rota para criar uma conta bancária
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Dados da conta bancária
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/AccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para criar uma conta bancária
      tags:
      - Account
  /account/remove/{id}:
    delete:
      consumes:
      - application/json
      description: Rota para deletar uma conta bancária
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID da conta bancária
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para deletar uma conta bancária
      tags:
      - Account
  /account/update/{id}:
    put:
      consumes:
      - application/json
      description: Rota para atualizar uma conta bancária
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Dados da conta bancária
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Accounts'
      - description: ID da conta bancária
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para atualizar uma conta bancária
      tags:
      - Account
  /category:
    get:
      consumes:
      - application/json
      description: Rota para retornar todas as categorias
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - collectionFormat: csv
        description: Ids das categorias a serem retornadas
        example:
        - 678079f6f5080a39a8eedc1e
        in: query
        items:
          type: string
        name: ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetCategoriesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'
      security:
      - ApiKeyAuth: []
      summary: Rota para retornar todas as categorias
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: Rota para criar uma categoria
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Dados da categoria
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'
      security:
      - ApiKeyAuth: []
      summary: Rota para criar uma categoria
      tags:
      - Category
  /category/remove/{id}:
    delete:
      consumes:
      - application/json
      description: Rota para deletar uma categoria
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID da categoria
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para deletar uma categoria
      tags:
      - Category
  /category/update/{id}:
    put:
      consumes:
      - application/json
      description: Rota para atualizar uma categoria
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Dados da categoria
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Categories'
      - description: ID da categoria
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para atualizar uma categoria
      tags:
      - Category
  /costs:
    get:
      consumes:
      - application/json
      description: Rota para retornar os custos
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - collectionFormat: csv
        description: Ids dos custos a serem retornados
        example:
        - 678079f6f5080a39a8eedc1e
        in: query
        items:
          type: string
        name: ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Costs'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para retornar os custos
      tags:
      - Costs
    post:
      consumes:
      - application/json
      description: Rota para criar um custo
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Dados do custo
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para criar um custo
      tags:
      - Costs
  /costs/remove/{id}:
    delete:
      consumes:
      - application/json
      description: Rota para deletar um custo
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID do custo
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para deletar um custo
      tags:
      - Costs
  /costs/update/{id}:
    put:
      consumes:
      - application/json
      description: Rota para atualizar um custo
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Dados do custo
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Costs'
      - description: ID do custo
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para atualizar um custo
      tags:
      - Costs
  /investment/update/{id}:
    put:
      consumes:
      - application/json
      description: Rota para atualizar um investimento
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Dados do investimento
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Investments'
      - description: ID do investimento
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para atualizar um investimento
      tags:
      - Investments
  /investments:
    get:
      consumes:
      - application/json
      description: Rota para retornar os investimentos
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - collectionFormat: csv
        description: Ids dos investimentos a serem retornados
        example:
        - 0
        - 1
        - 2
        - 3
        in: query
        items:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          type: integer
        name: ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Investments'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para retornar os investimentos
      tags:
      - Investments
    post:
      consumes:
      - application/json
      description: Rota para criar um investimento
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Dados do investimento
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/InvestmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para criar um investimento
      tags:
      - Investments
  /investments/get_types:
    get:
      consumes:
      - application/json
      description: Rota para retornar todos os tipos de investimentos
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - collectionFormat: csv
        description: Ids dos investimentos a serem retornados
        example:
        - 0
        - 1
        - 2
        - 3
        in: query
        items:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          type: integer
        name: ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetInvestmentsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'
      security:
      - ApiKeyAuth: []
      summary: Rota para retornar todos os tipos de investimentos
      tags:
      - Investments
  /investments/remove/{id}:
    delete:
      consumes:
      - application/json
      description: Rota para deletar um investimento
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID do investimento
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para deletar um investimento
      tags:
      - Investments
  /methods:
    get:
      consumes:
      - application/json
      description: Rota para retornar todos os métodos
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - collectionFormat: csv
        description: Ids dos métodos a serem retornados
        example:
        - 0
        - 1
        - 2
        - 3
        in: query
        items:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
        name: ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetMethodsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'
      security:
      - ApiKeyAuth: []
      summary: Rota para retornar todos os métodos
      tags:
      - Methods
  /revenues:
    get:
      consumes:
      - application/json
      description: Rota para retornar as receitas
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - collectionFormat: csv
        description: Ids das receitas a serem retornadas
        example:
        - 678079f6f5080a39a8eedc1e
        in: query
        items:
          type: string
        name: ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Revenues'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para retornar as receitas
      tags:
      - Revenues
    post:
      consumes:
      - application/json
      description: Rota para criar uma receita
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Dados da receita
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/RevenueRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para criar uma receita
      tags:
      - Revenues
  /revenues/remove/{id}:
    delete:
      consumes:
      - application/json
      description: Rota para deletar uma receita
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID da receita
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para deletar uma receita
      tags:
      - Revenues
  /revenues/update/{id}:
    put:
      consumes:
      - application/json
      description: Rota para atualizar uma receita
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Dados da receita
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Revenues'
      - description: ID da receita
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para atualizar uma receita
      tags:
      - Revenues
  /user/login:
    post:
      consumes:
      - application/json
      description: Rota para logar um usuário
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Dados do usuário
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para logar um usuário
      tags:
      - User
  /user/me:
    get:
      consumes:
      - application/json
      description: Rota para retornar o usuário logado
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para retornar o usuário logado
      tags:
      - User
  /user/signup:
    post:
      consumes:
      - application/json
      description: Rota para criar um usuário
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Dados do usuário
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para criar um usuário
      tags:
      - User
  /user/update/{id}:
    put:
      consumes:
      - application/json
      description: Rota para atualizar um usuário
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Dados do usuário
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UserUpdateRequest'
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para atualizar um usuário
      tags:
      - User
  /user/update/password/{id}:
    put:
      consumes:
      - application/json
      description: Rota para atualizar a senha de um usuário
      parameters:
      - description: Token Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Dados da senha
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UserUpdatePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Rota para atualizar a senha de um usuário
      tags:
      - User
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    description: Bearer token authentication
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
